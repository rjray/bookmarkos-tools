#!/usr/bin/env python3
"""Convert the pseudo-HTML content of a bookmarks backup into a JSON structure
that can be used for other purposes."""

import argparse
import sys

from bookmarkos.json_io import write_json_data
from bookmarkos.parser import parse_bookmarks


def parse_command_line():
    """Handle command-line arguments."""

    parser = argparse.ArgumentParser()

    parser.add_argument(
        '-i', '--input', type=str, default='-',
        help='File to read bookmarks from, or "-" to read from STDIN'
    )
    parser.add_argument(
        '-o', '--output', type=str, default='-',
        help='File to write JSON to, or "-" to write to STDOUT'
    )
    parser.add_argument(
        '-p', '--pretty', action='store_true',
        help='Pretty-print the resulting JSON'
    )
    parser.add_argument(
        '-s', '--sorted', action='store_true',
        help='Sort JSON keys in output'
    )

    return parser.parse_args()


def main():
    """Main loop. Parse args and process the input content into the output."""

    args = parse_command_line()

    # A value of "-" for --input means to read from STDIN. Otherwise, just pass
    # the given name. If it ends in `.gz` it'll be read as compressed.
    root = parse_bookmarks(sys.stdin if args.input == '-' else args.input)

    # An --output value of "-" means to write to STDOUT. Otherwise, just pass
    # the given file-name. If it ends in `.gz` it'll be written as compressed.
    ofh = sys.stdout if args.output == '-' else args.output

    # Apply either of the JSON-related arguments when creating the JSON output
    json_args = {}
    if args.pretty:
        json_args['indent'] = 2
    if args.sorted:
        json_args['sort_keys'] = True

    write_json_data(root, ofh, json=json_args)


if __name__ == '__main__':
    main()
